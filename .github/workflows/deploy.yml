name: Deploy CorrelateAI Pro to GitHub Pages

on:
  push:
    branches: ["main"]
    paths-ignore:
      - 'public/ai-data/**'
      - 'data-summary.md'
      - '**.md'
      - 'docs/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          VITE_FRED_API_KEY: ${{ secrets.VITE_FRED_API_KEY }}
          VITE_APP_NAME: "CorrelateAI Pro"
          VITE_APP_VERSION: "1.0.0"
          # Skip network-heavy prefetch/generate steps in CI to make the build deterministic
          SKIP_PREFETCH: 'true'

      - name: Fix MIME types and add GitHub Pages configuration
        run: |
          # Add .nojekyll file for GitHub Pages
          touch ./dist/.nojekyll
          
          # Verify build output
          echo "Build output contents:"
          ls -la ./dist/
          echo "Assets directory:"
          ls -la ./dist/assets/ || echo "No assets directory found"
          
          # Ensure site.webmanifest exists and has correct extension
          if [ -f "./dist/site.webmanifest" ]; then
            echo "✓ site.webmanifest found in dist"
          else
            echo "⚠️ Warning: site.webmanifest not found in dist"
            echo "Checking public directory:"
            ls -la ./public/site.webmanifest || echo "site.webmanifest not in public either"
          fi
          
          # Check if main.tsx was properly built
          if [ -f "./dist/assets/"*.js ]; then
            echo "✓ JavaScript files found in assets"
          else
            echo "⚠️ Warning: No JavaScript files found in assets"
          fi
          
          # Create a simple web.config for MIME types (fallback)
          cat > ./dist/web.config << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <configuration>
            <system.webServer>
              <staticContent>
                <mimeMap fileExtension=".js" mimeType="text/javascript" />
                <mimeMap fileExtension=".mjs" mimeType="text/javascript" />
                <mimeMap fileExtension=".webmanifest" mimeType="application/manifest+json" />
              </staticContent>
              <httpErrors errorMode="Custom" defaultResponseMode="File">
                <remove statusCode="404" />
                <error statusCode="404" responseMode="File" path="/404.html" />
              </httpErrors>
            </system.webServer>
          </configuration>
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4